/***********************************************************************/
/*                                                                     */
/*  FILE        :queue.h                                               */
/*  DATE        :Wed, Jun 14, 2009                                     */
/*  DESCRIPTION :Queue Program's header                                */
/*  CPU TYPE    :SH7047                                                */
/*                                                                     */
/*  This file is generated by Tatsuya Miyazaki                         */
/*                                                                     */
/***********************************************************************/

/************** FIFOの使い方 ***************

1. FIFOをつくる
  char buf[101] = {0};
	queueType queue1 = {buf, 100, 0, 0, "queue1"};

2. 値を入れる
	enqueue(FIFOポインタ, 入れる値);

3. 値を出す
	値 = dequeue(FIFOポインタ);

4. FIFOが空っぽかどうか調べる
	if(isQueueEmpty(FIFOポインタ))

5. FIFOが満タンかどうか調べる
	if(isQueueFull(FIFOポインタ))

*******************************************/

#ifndef _QUEUE_H__
#define _QUEUE_H__
#include <arduino.h>

typedef uint8_t queue_t;	/* 格納データの型 */

typedef struct queue {
  queue_t *data;				/* データ格納用の配列を指すポインタ */
  uint16_t size;				/* データ格納用配列のサイズ */
  uint16_t front;				/* 待ち行列の先頭の位置 */
  uint16_t rear;				/* 待ち行列の末尾の次の位置 */
  int8_t name[11];					/* 待ち行列の名前 */
} queueType;

uint16_t queueNext(uint16_t n, uint16_t size);
uint8_t isQueueEmpty(queueType *que);
uint8_t isQueueFull(queueType *que);
uint8_t enqueue(queueType *que, queue_t x);
queue_t dequeue(queueType *que);
int8_t *getQueueName(queueType *que);

#endif

