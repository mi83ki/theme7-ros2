/***********************************************************************/
/*                                                                     */
/*  FILE        :CTimer.cpp                                            */
/*  DATE        :Jun 28, 2020                                          */
/*  DESCRIPTION :タイマークラス                                        */
/*                                                                     */
/*  This file is generated by Tatsuya Miyazaki                         */
/*                                                                     */
/***********************************************************************/

#ifndef _CTIMER_CPP__
#define _CTIMER_CPP__

#include "CTimer.hpp"

/***********************************************************************/
/*                           タイマー関数                              */
/*        注：millis()を使用する                                       */
/***********************************************************************/

// コンストラクタ
CTimer::CTimer() {
  tempTimer = 0;
}

// コンストラクタ(周期[ms])
CTimer::CTimer(uint16_t time) {
  pastTime = 0;
  cycleTime = time;
}

// 周期が来たことを知らせ、フラグをクリアする（1:周期がきた、0:周期でない）
uint8_t CTimer::isCycleTime(void) {
  uint32_t temp = millis() / (uint32_t)cycleTime;
  uint32_t returnData = temp - pastTime;
  pastTime = temp;
  return(returnData);
}

// タイマーをクリアする
void CTimer::startTimer(void) {
  tempTimer = millis();
}

// タイマー値[ms]を取得する
uint32_t CTimer::getTime(void) {
  return(millis() - tempTimer);
}

#endif  // _CTIMER_CPP__
