/***********************************************************************/
/*                                                                     */
/*  FILE        :CBumper.hpp                                            */
/*  DATE        :Jun. 14, 2020                                         */
/*  DESCRIPTION :第二世代ROSロボ バンパーの接触検知モジュール          */
/*                                                                     */
/*  This file is generated by Tatsuya Miyazaki                         */
/*                                                                     */
/***********************************************************************/

#ifndef _CBUMPER_HPP__
#define _CBUMPER_HPP__

#include <Arduino.h>
#include "fix.hpp"
#include "CFilter.hpp"


#define CUT_OFF_FREQ        (0.5f)    // ハイパスフィルタのカットオフ周波数[Hz]
#define BUMPER_SAMPLE_FREQ  (20)      // サンプリング周波数[Hz]
#define BUMPER_CYCLE_TIME   (1000 / BUMPER_SAMPLE_FREQ)    // サンプリング周期[ms]
#define BUMPER_THRESHOLD    (5)       // バンパー接触判定しきい値[V]
#define BUMPER_1            (A1)      // バンパーのPIN


class CBumper
{
public:
  CBumper(void);
  ~CBumper(void);
  // 現在のバンパー電圧[V]を返す
  float getPre(void);
  // バンパー電圧[V]のローパスフィルタ値を返す
  float getLPF(void);
  // バンパー電圧[V]のハイパスフィルタ値を返す
  float getHPF(void);
  // サンプリング関数。SAMPLE_FREQで実行してあげる必要がある。
  void bumperSampling(void);
  // バンパーがONなら1、OFFなら0を返す
  bool readBumper(void);
  // 引数のバンパー値を更新した上で、前回から変化したら1を、そうでなければ0を返す
  bool isBumperChanged(void); 

private:
  fix m_bpVoltage;                 // バンパー電圧 [V]
  CFirstFilter *m_bpFilter;      // 一次のローパスフィルタクラス

  // バンパー電圧[V]を返す
  fix readBumperVoltage(void);
  // 一次のローパスフィルタにかける
  void filtBumperVoltage(fix pre);
};

#endif  // _BUMPER_HPP__
